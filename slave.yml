---

- name: Check if database is standing by
  stat:
    path: '/var/lib/pgsql/12/data/backup_label.old'
  register: backup_status

- name: Stop PostgreSQL service
  systemd:
    name: postgresql-12.service
    state: stopped
    enabled: yes
  when: backup_status.stat.exists == False

- name: "Remove old data directory"
  file:
    state: absent
    path: "/var/lib/pgsql/12/data/"
  when: backup_status.stat.exists == False

- name: "Initialize the slave database"
  command: /usr/pgsql-12/bin/repmgr -h {% for host in groups['dbmaster'] %}{{ hostvars[host]['ansible_facts']['eth1']['ipv4']['address'] }}{% endfor %} -U repmgr -d repmgr standby clone
  become: true
  become_user: postgres
  when: backup_status.stat.exists == False

- name: Start and enable PostgreSQL service on boot
  systemd:
    name: postgresql-12.service
    state: started
    enabled: yes

- name: Check if repmgr is started
  stat:
    path: '/tmp/repmgrd.pid'
  register: repmgr_status

- name: Register slave in repmgr
  command: /usr/pgsql-12/bin/repmgr standby register -h {% for host in groups['dbmaster'] %}{{ hostvars[host]['ansible_facts']['eth1']['ipv4']['address'] }}{% endfor %} -U repmgr
  become: true
  become_user: postgres
  when: repmgr_status.stat.exists == False


- name: Start repmgr daemon
  command: /usr/pgsql-12/bin/repmgr daemon start
  become: true
  become_user: postgres
  when: repmgr_status.stat.exists == False

- name: Check repmgr daemon status
  command: /usr/pgsql-12/bin/repmgr daemon status
  become: true
  become_user: postgres
  register: repmgr_status

- debug:
    var: repmgr_status.stdout